AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:

  # First Lambda Function
  implementtaggingandlcp:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Timeout: 600
      Handler: implement_tagging_and_lcp.lambda_handler
      Runtime: python3.12
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Role: !GetAtt LambdaExecutionRole.Arn

  # Second Lambda Function
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Timeout: 600
      Handler: hello_world.lambda_handler
      Runtime: python3.12

  # Step Function
  StepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Sub:
          |
            {
              "StartAt": "FirstLambdaStep",
              "States": {
                "FirstLambdaStep": {
                  "Type": "Task",
                  "Resource": "${implementtaggingandlcp.Arn}",
                  "Next": "SecondLambdaStep"
                },
                "SecondLambdaStep": {
                  "Type": "Task",
                  "Resource": "${HelloWorldFunction.Arn}",
                  "End": true
                }
              }
            }
      RoleArn: !GetAtt StepFunctionExecutionRole.Arn

  # EventBridge Rule for Scheduled Trigger
  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "cron(0 21 ? 10-3 FRI *)"
      State: ENABLED
      RoleArn: !GetAtt EventBridgeInvokeStepFunctionRole.Arn
      Targets:
        - Arn: !GetAtt StepFunction.Arn
          Id: StepFunctionTarget
          RoleArn: !GetAtt StepFunctionExecutionRole.Arn

  # EventBridge execution role
  EventBridgeInvokeStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "events.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "InvokeStepFunction"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Action:
                  - "states:StartExecution"
                Resource: !GetAtt StepFunction.Arn

  # Step Function Execution Role
  StepFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "states.amazonaws.com"
                - "events.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "StepFunctionLambdaInvoke"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt implementtaggingandlcp.Arn
                  - !GetAtt HelloWorldFunction.Arn
        - PolicyName: "StepFunctionTriggerPolicy"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Action:
                  - "states:StartExecution"
                Resource: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:StepFunction"

  # Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "LambdaBasicExecution"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: arn:aws:logs:ap-southeast-2:920344503634:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - >-
                    arn:aws:logs:ap-southeast-2:920344503634:log-group:/aws/lambda/implement-tagging-and-lcp:*
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:ListAllMyBuckets
                  - s3:GetBucketTagging
                  - s3:PutBucketTagging
                  - s3:PutObject
                  - s3:PutLifecycleConfiguration
                Resource: '*'
